-- MySQL Script generated by MySQL Workbench
-- Tue Sep 13 22:48:44 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ecom
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ecom` ;

-- -----------------------------------------------------
-- Schema ecom
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ecom` DEFAULT CHARACTER SET utf8 ;
USE `ecom` ;

-- -----------------------------------------------------
-- Table `ecom`.`CarteiraCliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`CarteiraCliente` ;

CREATE TABLE IF NOT EXISTS `ecom`.`CarteiraCliente` (
  `idCarteiraCliente` INT NOT NULL,
  `ApelidoCartao` VARCHAR(50) NOT NULL,
  `NumeroCartao` INT NOT NULL,
  `NomeTitular` VARCHAR(100) NOT NULL,
  `Validade` INT NOT NULL,
  `CPF_Titular` INT NULL, 
  `cliente_IdCliente` INT NOT NULL,
  `TipoCartao_idTipoCartao` INT NOT NULL,
  PRIMARY KEY (`idCarteiraCliente`, `cliente_IdCliente`, `TipoCartao_idTipoCartao`),
  INDEX `fk_CarteiraCliente_cliente1_idx` (`cliente_IdCliente` ASC) VISIBLE,
  INDEX `fk_CarteiraCliente_TipoCartao1_idx` (`TipoCartao_idTipoCartao` ASC) VISIBLE,
  CONSTRAINT `fk_CarteiraCliente_cliente1`
    FOREIGN KEY (`cliente_IdCliente`)
    REFERENCES `ecom`.`cliente` (`IdCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CarteiraCliente_TipoCartao1`
    FOREIGN KEY (`TipoCartao_idTipoCartao`)
    REFERENCES `ecom`.`TipoCartao` (`idTipoCartao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Dados_Entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Dados_Entrega` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Dados_Entrega` (
  `idDados_Entrega` INT NOT NULL,
  `Tipo_De_Entrega_idTipo_De_Entrega` INT NOT NULL,
  `TipoSituacao_idTipoSituacao` INT NOT NULL,
  `CodigoRastreio` VARCHAR(45) NULL,
  `Observacoes` VARCHAR(45) NULL,
  PRIMARY KEY (`idDados_Entrega`, `Tipo_De_Entrega_idTipo_De_Entrega`, `TipoSituacao_idTipoSituacao`),
  INDEX `fk_Dados_Entrega_Tipo_De_Entrega1_idx` (`Tipo_De_Entrega_idTipo_De_Entrega` ASC) VISIBLE,
  INDEX `fk_Dados_Entrega_TipoSituacao1_idx` (`TipoSituacao_idTipoSituacao` ASC) VISIBLE,
  CONSTRAINT `fk_Dados_Entrega_Tipo_De_Entrega1`
    FOREIGN KEY (`Tipo_De_Entrega_idTipo_De_Entrega`)
    REFERENCES `ecom`.`Tipo_De_Entrega` (`idTipo_De_Entrega`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dados_Entrega_TipoSituacao1`
    FOREIGN KEY (`TipoSituacao_idTipoSituacao`)
    REFERENCES `ecom`.`TipoSituacao` (`idTipoSituacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Dipobiliza_Produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Dipobiliza_Produtos` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Dipobiliza_Produtos` (
  `Fornecedor_idFornecedor` INT NOT NULL,
  `Produto_IdProduto` INT NOT NULL,
  PRIMARY KEY (`Fornecedor_idFornecedor`, `Produto_IdProduto`),
  INDEX `fk_Fornecedor_has_Produto_Produto1_idx` (`Produto_IdProduto` ASC) VISIBLE,
  INDEX `fk_Fornecedor_has_Produto_Fornecedor_idx` (`Fornecedor_idFornecedor` ASC) VISIBLE,
  CONSTRAINT `fk_Fornecedor_has_Produto_Fornecedor`
    FOREIGN KEY (`Fornecedor_idFornecedor`)
    REFERENCES `ecom`.`Fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Fornecedor_has_Produto_Produto1`
    FOREIGN KEY (`Produto_IdProduto`)
    REFERENCES `ecom`.`Produto` (`IdProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Estoque` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Estoque` (
  `idEstoque` INT NOT NULL,
  `Local` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEstoque`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Fornecedor` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Fornecedor` (
  `idFornecedor` INT NOT NULL,
  `RazaoSocial` VARCHAR(45) NULL,
  `CNPJ` VARCHAR(14) NULL,
  `Fornecedorcol` VARCHAR(45) NULL,
  PRIMARY KEY (`idFornecedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Pagamento` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Pagamento` (
  `idPagamento` INT NOT NULL,
  `IdTipoPagamento` INT NULL,
  `Parcelas` INT NULL,
  `Primeiro_Vencimento` DATE NULL,
  `Ultimo_Vencimento` DATE NULL COMMENT 'Na camada de aplicacao calcular as datas intermediarias combinando o numero de parcelas com a primeira e ultima data de vencimento.',
  `TipoPagamento_idTipoPagamento` INT NOT NULL,
  PRIMARY KEY (`idPagamento`, `TipoPagamento_idTipoPagamento`),
  INDEX `fk_Pagamento_TipoPagamento1_idx` (`TipoPagamento_idTipoPagamento` ASC) VISIBLE,
  CONSTRAINT `fk_Pagamento_TipoPagamento1`
    FOREIGN KEY (`TipoPagamento_idTipoPagamento`)
    REFERENCES `ecom`.`TipoPagamento` (`idTipoPagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Produto` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Produto` (
  `IdProduto` INT NOT NULL,
  `IdCategoria` INT NOT NULL,
  `Identificacao` VARCHAR(45) NULL,
  `Valor` VARCHAR(45) NOT NULL,
  `Descricao` VARCHAR(45) NULL,
  `IdFornecedor` INT NOT NULL,
  PRIMARY KEY (`IdProduto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Produto_em_Estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Produto_em_Estoque` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Produto_em_Estoque` (
  `Produto_IdProduto` INT NOT NULL,
  `Estoque_idEstoque` INT NOT NULL,
  `Quantidade` INT NOT NULL,
  PRIMARY KEY (`Produto_IdProduto`, `Estoque_idEstoque`),
  INDEX `fk_Produto_has_Estoque_Estoque1_idx` (`Estoque_idEstoque` ASC) VISIBLE,
  INDEX `fk_Produto_has_Estoque_Produto1_idx` (`Produto_IdProduto` ASC) VISIBLE,
  CONSTRAINT `fk_Produto_has_Estoque_Produto1`
    FOREIGN KEY (`Produto_IdProduto`)
    REFERENCES `ecom`.`Produto` (`IdProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_has_Estoque_Estoque1`
    FOREIGN KEY (`Estoque_idEstoque`)
    REFERENCES `ecom`.`Estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Produtos_Por_Vendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Produtos_Por_Vendedor` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Produtos_Por_Vendedor` (
  `Vendedor Agregado_idVendedor Agregado` INT NOT NULL,
  `Produto_IdProduto` INT NOT NULL,
  `Quantidade` INT NULL,
  PRIMARY KEY (`Vendedor Agregado_idVendedor Agregado`, `Produto_IdProduto`),
  INDEX `fk_Vendedor Agregado_has_Produto_Produto1_idx` (`Produto_IdProduto` ASC) VISIBLE,
  INDEX `fk_Vendedor Agregado_has_Produto_Vendedor Agregado1_idx` (`Vendedor Agregado_idVendedor Agregado` ASC) VISIBLE,
  CONSTRAINT `fk_Vendedor Agregado_has_Produto_Vendedor Agregado1`
    FOREIGN KEY (`Vendedor Agregado_idVendedor Agregado`)
    REFERENCES `ecom`.`Vendedor_Agregado` (`idVendedor Agregado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Vendedor Agregado_has_Produto_Produto1`
    FOREIGN KEY (`Produto_IdProduto`)
    REFERENCES `ecom`.`Produto` (`IdProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Relacao_Produto_Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Relacao_Produto_Pedido` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Relacao_Produto_Pedido` (
  `pedido_idPedido` INT NOT NULL,
  `Produto_IdProduto` INT NOT NULL,
  `Qunatidade` INT NULL,
  `Relacao_Produto_Pedidocol` VARCHAR(45) NULL,
  PRIMARY KEY (`pedido_idPedido`, `Produto_IdProduto`),
  INDEX `fk_pedido_has_Produto_Produto1_idx` (`Produto_IdProduto` ASC) VISIBLE,
  INDEX `fk_pedido_has_Produto_pedido1_idx` (`pedido_idPedido` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_has_Produto_pedido1`
    FOREIGN KEY (`pedido_idPedido`)
    REFERENCES `ecom`.`pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_has_Produto_Produto1`
    FOREIGN KEY (`Produto_IdProduto`)
    REFERENCES `ecom`.`Produto` (`IdProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`TipoCartao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`TipoCartao` ;

CREATE TABLE IF NOT EXISTS `ecom`.`TipoCartao` (
  `idTipoCartao` INT NOT NULL,
  `Descricao` VARCHAR(45) NULL COMMENT 'Debito, Credito, Alimentacao, Refeicao, Voucher.',
  PRIMARY KEY (`idTipoCartao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`TipoIdentificao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`TipoIdentificao` ;

CREATE TABLE IF NOT EXISTS `ecom`.`TipoIdentificao` (
  `idTipoIdentificao` INT NOT NULL,
  `Descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`idTipoIdentificao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`TipoPagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`TipoPagamento` ;

CREATE TABLE IF NOT EXISTS `ecom`.`TipoPagamento` (
  `idTipoPagamento` INT NOT NULL,
  `Descricao` VARCHAR(45) NOT NULL COMMENT 'A vista, Parcelado com entrada, parcelado sem entrada.',
  PRIMARY KEY (`idTipoPagamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`TipoSituacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`TipoSituacao` ;

CREATE TABLE IF NOT EXISTS `ecom`.`TipoSituacao` (
  `idTipoSituacao` INT NOT NULL,
  `Descricao` VARCHAR(45) NULL COMMENT 'Entregue, a caminho, Preparando, Devolvido, Em Tentativa.',
  PRIMARY KEY (`idTipoSituacao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Tipo_De_Entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Tipo_De_Entrega` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Tipo_De_Entrega` (
  `idTipo_De_Entrega` INT NOT NULL,
  `Descricao` VARCHAR(100) NULL COMMENT 'Retirada em ponto predeterminado, correios, entregador, fretado, motoboy, bike.',
  `CodigoSeguranca` INT NULL COMMENT 'Codigo de autenticacao pre-definido entre comprador e vendedor, exemplo, quatro ultimos numeros do celular.',
  PRIMARY KEY (`idTipo_De_Entrega`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`Vendedor_Agregado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`Vendedor_Agregado` ;

CREATE TABLE IF NOT EXISTS `ecom`.`Vendedor_Agregado` (
  `idVendedor Agregado` INT NOT NULL,
  `RazaoSocial` VARCHAR(100) NULL,
  `Local` VARCHAR(200) NULL,
  PRIMARY KEY (`idVendedor Agregado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`cliente` ;

CREATE TABLE IF NOT EXISTS `ecom`.`cliente` (
  `IdCliente` INT NOT NULL,
  `Identificacao` VARCHAR(45) NULL,
  `Nome` VARCHAR(100) NOT NULL,
  `Endereco` VARCHAR(200) NULL,
  `IdCarteira` INT NULL COMMENT 'Pode ter mais de uma forma de pagamentos.',
  `TipoIdentificao_idTipoIdentificao` INT NOT NULL,
  PRIMARY KEY (`IdCliente`, `TipoIdentificao_idTipoIdentificao`),
  INDEX `fk_cliente_TipoIdentificao1_idx` (`TipoIdentificao_idTipoIdentificao` ASC) VISIBLE,
  CONSTRAINT `fk_cliente_TipoIdentificao1`
    FOREIGN KEY (`TipoIdentificao_idTipoIdentificao`)
    REFERENCES `ecom`.`TipoIdentificao` (`idTipoIdentificao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecom`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecom`.`pedido` ;

CREATE TABLE IF NOT EXISTS `ecom`.`pedido` (
  `idPedido` INT NOT NULL,
  `StatusPedido` VARCHAR(45) NULL,
  `Descricao` VARCHAR(45) NULL,
  `cliente_IdCliente` INT NOT NULL,
  `Frete` FLOAT NULL,
  `Pagamento_idPagamento` INT NOT NULL,
  `Dados_Entrega_idDados_Entrega` INT NOT NULL,
  `Dados_Entrega_Tipo_De_Entrega_idTipo_De_Entrega` INT NOT NULL,
  PRIMARY KEY (`idPedido`, `Pagamento_idPagamento`, `Dados_Entrega_idDados_Entrega`, `Dados_Entrega_Tipo_De_Entrega_idTipo_De_Entrega`),
  INDEX `fk_pedido_cliente1_idx` (`cliente_IdCliente` ASC) VISIBLE,
  INDEX `fk_pedido_Pagamento1_idx` (`Pagamento_idPagamento` ASC) VISIBLE,
  INDEX `fk_pedido_Dados_Entrega1_idx` (`Dados_Entrega_idDados_Entrega` ASC, `Dados_Entrega_Tipo_De_Entrega_idTipo_De_Entrega` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_cliente1`
    FOREIGN KEY (`cliente_IdCliente`)
    REFERENCES `ecom`.`cliente` (`IdCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_Pagamento1`
    FOREIGN KEY (`Pagamento_idPagamento`)
    REFERENCES `ecom`.`Pagamento` (`idPagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_Dados_Entrega1`
    FOREIGN KEY (`Dados_Entrega_idDados_Entrega` , `Dados_Entrega_Tipo_De_Entrega_idTipo_De_Entrega`)
    REFERENCES `ecom`.`Dados_Entrega` (`idDados_Entrega` , `Tipo_De_Entrega_idTipo_De_Entrega`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
